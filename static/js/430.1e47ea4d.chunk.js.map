{"version":3,"file":"static/js/430.1e47ea4d.chunk.js","mappings":"kTAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAA,+BAEO,IAAMC,EAAgB,mCAAG,sGACPD,EAAAA,EAAAA,IAAA,sCACUD,EADV,YADO,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qDAMhBC,EAAc,mCAAG,WAAMC,GAAN,yFACLJ,EAAAA,EAAAA,IAAA,gCACID,EADJ,kBACqBK,EADrB,+CADK,uBACpBF,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAMdG,EAAiB,mCAAG,WAAMC,GAAN,yFACRN,EAAAA,EAAAA,IAAA,iBACXM,EADW,oBACGP,EADH,oBADQ,uBACvBG,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,sDAMjBK,EAAS,mCAAG,WAAMD,GAAN,yFACAN,EAAAA,EAAAA,IAAA,iBACXM,EADW,4BACWP,EADX,oBADA,uBACfG,EADe,EACfA,KADe,kBAIhBA,GAJgB,2CAAH,sDAMTM,EAAW,mCAAG,WAAMF,GAAN,yFACFN,EAAAA,EAAAA,IAAA,iBACXM,EADW,4BACWP,EADX,2BADE,uBACjBG,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,qD,0HC3BXO,GAAeC,E,QAAAA,GAAO,IAAPA,CAAH,mF,SCGZC,EAAU,WACrB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRT,EAAAA,EAAAA,IAAYU,OAAON,IAAUO,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBJ,EAAWI,EAA5B,GACnC,GAAE,CAACR,IAEAG,EAAU,GACL,SAACN,EAAD,UAAc,uCAIrB,yBACGM,EAAQM,KAAI,SAAAC,GAAM,OACjB,4BACE,0BACE,uBAAG,YAAW,IAAEA,EAAOC,WAEzB,0BACE,uBAAG,aAAY,IAAED,EAAOE,YAE1B,oBAPQF,EAAOhB,GADA,KAaxB,C","sources":["components/API/fetchAPI.jsx","components/Review/Reviews.styled.jsx","components/Review/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_KEY = '0ad512fb225eecaea999568cb90b6aa0';\r\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\r\n\r\nexport const fetchTrendingApi = async () => {\r\n  const { data } = await axios.get(\r\n    `/trending/movie/day?api_key=${API_KEY}&page=1`\r\n  );\r\n  return data;\r\n};\r\nexport const fetchSearchApi = async query => {\r\n  const { data } = await axios.get(\r\n    `/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\r\n  );\r\n  return data;\r\n};\r\nexport const fetchMovieDetails = async id => {\r\n  const { data } = await axios.get(\r\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\r\n  );\r\n  return data;\r\n};\r\nexport const fetchCast = async id => {\r\n  const { data } = await axios.get(\r\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\r\n  );\r\n  return data;\r\n};\r\nexport const fetchReview = async id => {\r\n  const { data } = await axios.get(\r\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\r\n  );\r\n  return data;\r\n};\r\n","import styled from '@emotion/styled';\n\nexport const ReviewsError = styled('p')`\n  padding: px;\n  text-align: center;\n  font-size: 30px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchReview } from 'components/API/fetchAPI';\nimport { ReviewsError } from './Reviews.styled';\n\nexport const Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchReview(Number(movieId)).then(({ results }) => setReviews(results));\n  }, [movieId]);\n\n  if (reviews < 1) {\n    return <ReviewsError>Sorry, we don't have any reviews!</ReviewsError>;\n  }\n\n  return (\n    <div>\n      {reviews.map(review => (\n        <div key={review.id}>\n          <p>\n            <b>Author:</b> {review.author}\n          </p>\n          <p>\n            <b>Content:</b> {review.content}\n          </p>\n          <hr />\n        </div>\n      ))}\n    </div>\n  );\n};\n"],"names":["API_KEY","axios","fetchTrendingApi","data","fetchSearchApi","query","fetchMovieDetails","id","fetchCast","fetchReview","ReviewsError","styled","Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","Number","then","results","map","review","author","content"],"sourceRoot":""}